!function(){"use strict";const e=[239,187,191];var t={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let n;const o=new Uint8Array(16);function a(){if(!n&&(n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!n))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return n(o)}const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));var s=function(e,n,o){if(t.randomUUID&&!n&&!e)return t.randomUUID();const s=(e=e||{}).random||(e.rng||a)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,n){o=o||0;for(let e=0;e<16;++e)n[o+e]=s[e];return n}return function(e,t=0){return(r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]).toLowerCase()}(s)};let i;const c={standard:"A network or API error occurred! Please wait a minute and try again.",prompt:"Invalid prompt.",denied:"ChatGPT denied this request. Please wait a minute before sending another request.",abort:"User aborted search.",timeout:"ChatGPT isn't responding right now. Please try again later."};async function l(t,n,o){let a,r=null;try{if(null==n||""===n.trim())throw new Error("prompt");i=new AbortController,a=setTimeout((()=>i.abort("timeout")),6e4);const c=await async function(e){try{const t=await fetch("https://chat.openai.com/backend-api/models",{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}});return(await t.json()).models[0].slug}catch(e){throw console.log(e),new Error("model")}}(t);let l,d=Date.now();const u=o?"Limit your response to 130 characters:\n"+n:n;return await async function(t,o,a){try{const t=await fetch("https://chat.openai.com/backend-api/conversation",o);if(!t.ok)throw new Error;const a=function(t){let n,o,a,r,s,i,c;return l(),{feed:function(t){o=o?o+t:t,n&&function(t){return e.every(((e,n)=>t.charCodeAt(n)===e))}(o)&&(o=o.slice(e.length)),n=!1;const s=o.length;let i=0,c=!1;for(;i<s;){c&&("\n"===o[i]&&++i,c=!1);let e,t=-1,n=r;for(let r=a;t<0&&r<s;++r)e=o[r],":"===e&&n<0?n=r-i:"\r"===e?(c=!0,t=r-i):"\n"===e&&(t=r-i);if(t<0){a=s-i,r=n;break}a=0,r=-1,d(o,i,n,t),i+=t+1}i===s?o="":i>0&&(o=o.slice(i))},reset:l};function l(){n=!0,o="",a=0,r=-1,s=void 0,i=void 0,c=""}function d(e,n,o,a){if(0===a)return c.length>0&&(t({type:"event",id:s,event:i||void 0,data:c.slice(0,-1)}),c="",s=void 0),void(i=void 0);const r=o<0,l=e.slice(n,n+(r?a:o));let d=0;d=r?a:" "===e[n+o+1]?o+2:o+1;const u=n+d,p=a-d,h=e.slice(u,u+p).toString();if("data"===l)c+=h?"".concat(h,"\n"):"\n";else if("event"===l)i=h;else if("id"!==l||h.includes("\0")){if("retry"===l){const e=parseInt(h,10);Number.isNaN(e)||t({type:"reconnect-interval",value:e})}}else s=h}}((e=>{"event"===e.type&&(e=>{if("[DONE]"!==e)try{const t=JSON.parse(e);r!=t.conversation_id&&(r=t.conversation_id),l=t.message.content.parts[0];const o=Date.now();o-d>1&&(f("query",[n,t.message.content.parts[0],!1]),d=o)}catch(e){return}})(e.data)}));for await(const e of async function*(e){const t=e.getReader();try{for(;;){const{done:e,value:n}=await t.read();if(e)return;yield n}}finally{t.releaseLock()}}(t.body)){const t=(new TextDecoder).decode(e);a.feed(t)}}catch(e){throw console.log(e),new Error("fetch")}}(0,{method:"POST",signal:i.signal,headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({action:"next",messages:[{id:s(),role:"user",content:{content_type:"text",parts:[u]}}],model:c,parent_message_id:s()})}),clearTimeout(a),await async function(e,t){try{return void await fetch("https://chat.openai.com/backend-api/conversation/"+e,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({is_visible:!1})})}catch(e){throw console.log(e),new Error("clear")}}(r,t),[l,!1]}catch(e){return clearTimeout(a),"user"==i.signal.reason?[c.abort,!0]:"timeout"==i.signal.reason?[c.timeout,!0]:"prompt"===e.message?[c.prompt,!0]:"fetch"===e.message?[c.denied,!0]:[c.standard,!0]}}chrome.runtime.onInstalled.addListener((()=>{chrome.runtime.openOptionsPage()})),chrome.contextMenus.remove("3",(()=>{chrome.contextMenus.create({id:"3",title:"Search text and get response as notification",contexts:["selection"]})})),chrome.runtime.onMessage.addListener(((e,t,n)=>{switch(e.type){case"query":u(e);break;case"callAPI":return d(e),!0;case"abort":i.abort("user")}}));const d=async e=>{await f("loading","true"),await f("query",[e.query,null,!1]);const t=await h("accessToken"),n=await l(t,e.query,!1);await f("query",[e.query,n[0],n[1]]),await f("loading","false")},u=async e=>{const t=await h("loading");null!=t&&"false"!==t||await f("query",[e.payload,null,!1])};chrome.contextMenus.onClicked.addListener((async e=>{const t=await h("loading");if(null==t||"false"===t){const t=await fetch("https://chat.openai.com/api/auth/session");if(403===t.status)p("Error!!!","Open the GptGO popup and sign in before sending search requests");else{const n=await t.json().catch((()=>({})));if(n.accessToken){await f("loading","true"),await f("query",[e.selectionText,null,!1]);const t=await l(n.accessToken,e.selectionText,!0);await f("query",[e.selectionText,t[0],t[1]]),await f("loading","false"),p(!0===t[1]?"Error!!!":"Response to: "+e.selectionText,t[0].replace(/\n/g,""))}else p("Error!!!","Open the GptGO popup and sign in before sending search requests")}}}));const p=(e,t)=>{chrome.notifications.create("",{title:e,type:"basic",message:t,iconUrl:"images/logo192.png"})},h=async e=>(await chrome.storage.local.get([e]))[e],f=async(e,t)=>{await chrome.storage.local.set({[e]:t})}}();